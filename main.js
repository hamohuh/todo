!function(c){var I={};function e(g){if(I[g])return I[g].exports;var t=I[g]={i:g,l:!1,exports:{}};return c[g].call(t.exports,t,t.exports,e),t.l=!0,t.exports}e.m=c,e.c=I,e.d=function(c,I,g){e.o(c,I)||Object.defineProperty(c,I,{enumerable:!0,get:g})},e.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},e.t=function(c,I){if(1&I&&(c=e(c)),8&I)return c;if(4&I&&"object"==typeof c&&c&&c.__esModule)return c;var g=Object.create(null);if(e.r(g),Object.defineProperty(g,"default",{enumerable:!0,value:c}),2&I&&"string"!=typeof c)for(var t in c)e.d(g,t,function(I){return c[I]}.bind(null,t));return g},e.n=function(c){var I=c&&c.__esModule?function(){return c.default}:function(){return c};return e.d(I,"a",I),I},e.o=function(c,I){return Object.prototype.hasOwnProperty.call(c,I)},e.p="",e(e.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/todo.js\nconst Todo = (name, descrition, due, priority, isDone) => {\r\n    return { name, descrition, due, priority, isDone }\r\n}\r\n\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/project.js\n//let projects = [];\r\n\r\nconst Project = (name) => {\r\n    let todos = [];\r\n    return { name, todos }\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/controller.js\n\r\n\r\n\r\n//get the projects from localStorage\r\nlet storedProjects = localStorage.getItem(\"projects\");\r\n\r\n//check if there is something in the localStorage, if not make it an empty array\r\nlet projectsArray = (storedProjects) ? JSON.parse(storedProjects) : [];\r\n\r\n/**\r\n * this is out main function which is responsible for rendering,\r\n * and controlling the whole project this its methods\r\n */\r\nconst RenderProject = () => {\r\n\r\n    /**\r\n     * this function adds object of Project\r\n     * @param name is the project name that we pass and we get it from the avlue input from the user\r\n     */\r\n    const addProject = (name) => {\r\n        let newProject = Project(name);\r\n        projectsArray.push(newProject);\r\n\r\n        localStorage.setItem('projects', JSON.stringify(projectsArray));\r\n    }\r\n\r\n    /**\r\n     * this dunction deletes an entire object at a specific index in the array\r\n     * @param {*} index we pass it through depends on the e.target index\r\n     */\r\n    const deleteProject = (index) => {\r\n        projectsArray.splice(index, 1);\r\n        localStorage.setItem('projects', JSON.stringify(projectsArray));\r\n        clearProjectsListUi();\r\n        clearTodosListUi();\r\n        renderProjects();\r\n\r\n        document.getElementById('selected-project-name').innerHTML = 'Select an Existing project';\r\n    }\r\n\r\n    /**\r\n     * this function renders the array of projects \r\n     */\r\n    const renderProjects = () => {\r\n        projectsArray.forEach(element => {\r\n            let index = projectsArray.indexOf(element);\r\n            const deleteProjIcon = document.createElement('i');\r\n            deleteProjIcon.classList.add('material-icons');\r\n            deleteProjIcon.innerHTML = \"delete\";\r\n            deleteProjIcon.setAttribute('data-delete-index', index);\r\n            const deleteTd = document.createElement('td');\r\n            deleteTd.classList.add('delete-button');\r\n            deleteTd.appendChild(deleteProjIcon);\r\n\r\n\r\n            const projNameTd = document.createElement('td');\r\n            projNameTd.classList.add('project-name');\r\n            projNameTd.innerHTML = projectsArray[index].name;\r\n            projNameTd.setAttribute('data-info-index', index);\r\n\r\n            const bulbProjIcon = document.createElement('i');\r\n            bulbProjIcon.classList.add('material-icons');\r\n            bulbProjIcon.innerHTML = \"lightbulb_outline\";\r\n            const bulbTd = document.createElement('td');\r\n            bulbTd.classList.add('project-icon');\r\n            bulbTd.appendChild(bulbProjIcon);\r\n\r\n            const projItemTr = document.createElement('tr');\r\n            projItemTr.classList.add('project-item');\r\n            projItemTr.appendChild(bulbTd);\r\n            projItemTr.appendChild(projNameTd);\r\n            projItemTr.appendChild(deleteTd);\r\n\r\n            const projectsBody = document.getElementById('projects-body');\r\n            projectsBody.appendChild(projItemTr);\r\n\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * this function adds a todo object inside a specific object's todos array\r\n     * @param {*} project the index of the project inside the projectsArray\r\n     * it's getting projectsArray[i]\r\n     */\r\n    const addTodo = (index) => {\r\n        let todoName = document.getElementById('todo-input-name').value;\r\n        let todoDescription = document.getElementById('todo-input-description').value;\r\n        let todoDue = document.getElementById('todo-date').value;\r\n        let e = document.getElementById('priority');\r\n        let priority = e.options[e.selectedIndex].text;\r\n        let isDone = false;\r\n\r\n        let newTodo = Todo(todoName, todoDescription, todoDue, priority, isDone);\r\n        projectsArray[index].todos.push(newTodo);\r\n\r\n        localStorage.setItem('projects', JSON.stringify(projectsArray));\r\n    }\r\n\r\n\r\n    /**\r\n     * this function render the todos on the proect object\r\n     * @param {*} index it gets the index of the object\r\n     * and gets into the array of objects todo and itterate over it\r\n     * it requires an array of todos to itterate on projectsArray[i].todos\r\n     */\r\n    const renderTodo = (index) => {\r\n        let collapse = 0;\r\n        let arrayLength = projectsArray[index].todos.length;\r\n        for (let i = 0; i < arrayLength; i++) {\r\n\r\n            //Done Icon and its div creation\r\n            let doneIcon = document.createElement('i');\r\n            doneIcon.classList.add('material-icons');\r\n            doneIcon.innerHTML = \"done_all\";\r\n            let doneIconDiv = document.createElement('div');\r\n            doneIconDiv.classList.add('.col-auto');\r\n            doneIconDiv.setAttribute('id', 'todo-done');\r\n            doneIconDiv.appendChild(doneIcon);\r\n\r\n            //Label icon and its div creation\r\n            let labelIcon = document.createElement('i');\r\n            labelIcon.classList.add('material-icons');\r\n            labelIcon.innerHTML = \"label_outline\";\r\n            labelIcon.setAttribute('id', 'labelIcon')\r\n            let labelIconDiv = document.createElement('div');\r\n            labelIconDiv.classList.add('.col-auto');\r\n            labelIconDiv.setAttribute('id', 'todo-label');\r\n            labelIconDiv.appendChild(labelIcon);\r\n\r\n            //the div container for done and label icons\r\n            let doneRow = document.createElement('div');\r\n            doneRow.classList.add('row');\r\n            doneRow.setAttribute('id', 'done-row');\r\n            doneRow.appendChild(doneIconDiv);\r\n            doneRow.appendChild(labelIconDiv);\r\n\r\n            //the Todo Name\r\n            let todoName = document.createElement('p');\r\n            todoName.innerHTML = projectsArray[index].todos[i].name\r\n            let todoNameLink = document.createElement('a');\r\n            todoNameLink.classList.add('collapsed');\r\n            todoNameLink.classList.add('card-link');\r\n            todoNameLink.setAttribute('data-toggle', 'collapse');\r\n            todoNameLink.setAttribute('href', `collapse${collapse}`);\r\n            todoNameLink.appendChild(todoName);\r\n\r\n            //todo date\r\n            let todoDate = document.createElement('p');\r\n            todoDate.setAttribute('id', 'todo-item-date');\r\n            todoDate.innerHTML = projectsArray[index].todos[i].due;\r\n\r\n            //Edit Icon and its div creation\r\n            let editIcon = document.createElement('i');\r\n            editIcon.classList.add('material-icons');\r\n            editIcon.innerHTML = \"edit\";\r\n            let editIconDiv = document.createElement('div');\r\n            editIconDiv.classList.add('.col-auto');\r\n            editIconDiv.setAttribute('id', 'todo-edit');\r\n            editIconDiv.appendChild(editIcon);\r\n\r\n            //Delete icon and its div creation\r\n            let deleteIcon = document.createElement('i');\r\n            deleteIcon.classList.add('material-icons');\r\n            deleteIcon.innerHTML = \"delete\";\r\n            let deleteIconDiv = document.createElement('div');\r\n            deleteIconDiv.classList.add('.col-auto');\r\n            deleteIconDiv.setAttribute('id', 'todo-delete');\r\n            deleteIconDiv.appendChild(deleteIcon);\r\n\r\n            //the div container for edit and delete icons\r\n            let editRow = document.createElement('div');\r\n            editRow.classList.add('row');\r\n            editRow.setAttribute('id', 'edit-row');\r\n            editRow.appendChild(editIconDiv);\r\n            editRow.appendChild(deleteIconDiv);\r\n\r\n            //card header div to contain all above\r\n            let cardHeader = document.createElement('div');\r\n            cardHeader.classList.add('card-header');\r\n            cardHeader.appendChild(doneRow);\r\n            cardHeader.appendChild(todoNameLink);\r\n            cardHeader.appendChild(todoDate);\r\n            cardHeader.appendChild(editRow);\r\n\r\n            //the card body contains the descretion\r\n            let cardBodyText = document.createElement('div');\r\n            cardBodyText.classList.add('card-body');\r\n            cardBodyText.innerHTML = projectsArray[index].todos[i].descrition;\r\n\r\n            //div that contains the card body\r\n            let cardBody = document.createElement('div');\r\n            cardBody.classList.add('collapse');\r\n            cardBody.setAttribute('id', `collapse${collapse}`);\r\n            collapse++;\r\n            cardBody.setAttribute('data-parent', '#accordion');\r\n            cardBody.appendChild(cardBodyText);\r\n\r\n            //the card div that contains the card header and card body\r\n            let card = document.createElement('div');\r\n            card.classList.add('card');\r\n            card.appendChild(cardHeader);\r\n            card.appendChild(cardBody);\r\n\r\n            //div contains all the cards\r\n            let cardsContainer = document.getElementById('accordion');\r\n            cardsContainer.appendChild(card);\r\n\r\n            toggleTodo()\r\n\r\n            /**\r\n             *check the periority value and set the label color depends on the value\r\n             */\r\n            const checkPriority = () => {\r\n                if (projectsArray[index].todos[i].priority == \"Normal\") {\r\n                    labelIcon.style.color = \"#00c41f\";\r\n                } else if (projectsArray[index].todos[i].priority == \"Medium\") {\r\n                    labelIcon.style.color = \"#fffb00\";\r\n                } else if (projectsArray[index].todos[i].priority == \"Importnat\") {\r\n                    labelIcon.style.color = \"red\";\r\n                }\r\n                localStorage.setItem('projects', JSON.stringify(projectsArray));\r\n            }\r\n\r\n            /**\r\n             * change the Todo state from undone to done\r\n             */\r\n            function changeTodoState() {\r\n                doneIcon.addEventListener('click', () => {\r\n                    projectsArray[index].todos[i].isDone = true;\r\n                    localStorage.setItem('projects', JSON.stringify(projectsArray));\r\n                    changeStateColor();\r\n                })\r\n            }\r\n\r\n            /**\r\n             * change the color of the done icon when the todo is done\r\n             */\r\n            const changeStateColor = () => {\r\n                if (projectsArray[index].todos[i].isDone == true) {\r\n                    doneIcon.style.color = \"#1fb462\";\r\n                    localStorage.setItem('projects', JSON.stringify(projectsArray));\r\n                }\r\n            }\r\n\r\n            /**\r\n             * delete Todo item\r\n             */\r\n            const deleteTodo = () => {\r\n                deleteIcon.addEventListener('click', () => {\r\n                    projectsArray[index].todos.splice(i, 1);\r\n                    localStorage.setItem('projects', JSON.stringify(projectsArray));\r\n                    clearTodosListUi();\r\n                    renderTodo(index);\r\n                })\r\n            }\r\n\r\n            //function calls\r\n            checkPriority();\r\n            changeStateColor();\r\n            changeTodoState();\r\n            deleteTodo()\r\n        };\r\n    }\r\n\r\n    /**\r\n     * this function to render the selected project name\r\n     * @param {*} index the index of the selected project\r\n     */\r\n    const renderSelectedProjectName = (index) => {\r\n        let selectedProjName = document.getElementById('selected-project-name');\r\n        selectedProjName.innerHTML = projectsArray[index].name;\r\n        selectedProjName.setAttribute('selected-name-index', index);\r\n    }\r\n\r\n    /**\r\n     * this function to clear the projects list UI\r\n     */\r\n    const clearProjectsListUi = () => {\r\n        document.getElementById('projects-body').innerHTML = \"\";\r\n    }\r\n\r\n    /**\r\n     * this function to clear the todos list UI\r\n     */\r\n    const clearTodosListUi = () => {\r\n        document.getElementById('accordion').innerHTML = \"\";\r\n    }\r\n\r\n    /**\r\n     * this function is responsible for toggling the todo items card\r\n     */\r\n    const toggleTodo = () => {\r\n        $(\".card\").on(\"click\", function (e) {\r\n            var $_target = $(e.currentTarget);\r\n            var $_cardBody = $_target.find(\".collapse\");\r\n            if ($_cardBody) {\r\n                $_cardBody.collapse('toggle')\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return {\r\n        addProject,\r\n        deleteProject,\r\n        renderProjects,\r\n        clearProjectsListUi,\r\n        clearTodosListUi,\r\n        addTodo,\r\n        renderTodo,\r\n        renderSelectedProjectName,\r\n        toggleTodo\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * for my demo Tutorial i made a manual proect and some Todos\r\n */\r\nconst render = RenderProject();\r\n\r\n//adding the first element manually\r\nprojectsArray[0] = { name: 'Tutorial', todos: [] };\r\n\r\n//todos objects for my tutorial demo to push manually \r\nlet tutotialTodo1 = Todo(\"Add project\", \"You can add a new project by clicking '+' next to My projects on the left top and type the project name then press 'Add' \", \"2020-01-30\", \"Normal\", true);\r\nlet tutotialTodo2 = Todo(\"Select a specific project\", \"Then you can select a specefic project you wanna add todos to it\", \"2020-01-31\", \"Medium\", false);\r\nlet tutotialTodo3 = Todo(\"Adding a new Todo\", \"To add a new todo, select the targeted project then press '+' on the top righ\", \"2020-05-12\", \"Important\", true);\r\nlet tutotialTodo4 = Todo(\"Adding a new Todo info\", \"In the pop up form just fill the information about your todo and Ta Da it's added to your selected project\", \"2020-08-20\", \"Important\", false);\r\nlet tutotialTodo5 = Todo(\"See added or existing todo info\", \"Just click the Todo name and it will toggle a menue with the details you added earlier\", \"2021-08-20\", \"Normal\", false);\r\nlet tutotialTodo6 = Todo(\"Mark todo done after finishing\", \"Just click Alright mark next to the todo name and once you click it it will mark green means it's done\", \"2050-08-20\", \"Important\", false);\r\n\r\n//i pushed them manually cause the addTodo function gets the values from the form inputs\r\nprojectsArray[0].todos.push(tutotialTodo1);\r\nprojectsArray[0].todos.push(tutotialTodo2);\r\nprojectsArray[0].todos.push(tutotialTodo3);\r\nprojectsArray[0].todos.push(tutotialTodo4);\r\nprojectsArray[0].todos.push(tutotialTodo5);\r\nprojectsArray[0].todos.push(tutotialTodo6);\r\n\r\nrender.renderProjects();\r\nrender.renderTodo(0);\r\nrender.renderSelectedProjectName(0);\r\n\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/index.js\n\r\n\r\n\r\nconst src_render = RenderProject();\r\n\r\n/**\r\n * listen to the event when click on the delte icon on the project\r\n */\r\ndocument.getElementById('projects-body').addEventListener('click', function (e) {\r\n\r\n    if (e.target && e.target.dataset.deleteIndex != undefined) {\r\n        let index = e.target.dataset.deleteIndex;\r\n        src_render.deleteProject(index);\r\n    }\r\n})\r\n\r\n/**\r\n * this function renders the todos inside any project depends on the click target\r\n */\r\ndocument.getElementById('projects-body').addEventListener('click', function (e) {\r\n    if (e.target && e.target.dataset.infoIndex != undefined) {\r\n        let index = e.target.dataset.infoIndex;\r\n        src_render.renderSelectedProjectName(index);\r\n        src_render.clearTodosListUi();\r\n        src_render.renderTodo(index);\r\n    }\r\n})\r\n\r\n/**\r\n * this function render the projects from the objects array\r\n * once the user add new project and click add button\r\n */\r\nconst renderCurrentProjects = function () {\r\n\r\n    src_render.clearProjectsListUi();\r\n\r\n    let projName = document.getElementById('project-input-name').value;\r\n\r\n    src_render.addProject(projName);\r\n\r\n    src_render.renderProjects();\r\n\r\n    document.getElementById('project-input-name').value = \"\";\r\n\r\n    //hide the form after clicking the button\r\n    $('.modal').modal('hide')\r\n\r\n    //this function call to control todo items toggling\r\n    src_render.toggleTodo();\r\n}\r\n\r\n\r\n\r\n/**\r\n * this function adds a new Todo to a specific proect's todos array\r\n * at a specific index\r\n */\r\nconst addNewTodo = function () {\r\n    let selectedProjName = document.getElementById('selected-project-name');\r\n    let index = selectedProjName.getAttribute('selected-name-index');\r\n    src_render.addTodo(index);\r\n    src_render.clearTodosListUi();\r\n    src_render.renderTodo(index);\r\n    document.getElementById('todo-input-name').value = \"\";\r\n    document.getElementById('todo-input-description').value = \"\";\r\n    document.getElementById('todo-date').value = \"\";\r\n    document.getElementById('priority').value = \"\";\r\n    //hide the form after clicking the button\r\n    $('.modal').modal('hide')\r\n    //this function call to control todo items toggling\r\n    src_render.toggleTodo();\r\n}\r\n\r\n\r\n// Add project button event when it's clicked\r\ndocument.getElementById('add-project-button').addEventListener('click', renderCurrentProjects);\r\n\r\n// Add todo button event when it's clicked\r\ndocument.getElementById('add-todo-button').addEventListener('click', addNewTodo);\r\n\r\n//this function call to control todo items toggling\r\nsrc_render.toggleTodo();\r\n\r\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);