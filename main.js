!function(c){var n={};function e(I){if(n[I])return n[I].exports;var t=n[I]={i:I,l:!1,exports:{}};return c[I].call(t.exports,t,t.exports,e),t.l=!0,t.exports}e.m=c,e.c=n,e.d=function(c,n,I){e.o(c,n)||Object.defineProperty(c,n,{enumerable:!0,get:I})},e.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},e.t=function(c,n){if(1&n&&(c=e(c)),8&n)return c;if(4&n&&"object"==typeof c&&c&&c.__esModule)return c;var I=Object.create(null);if(e.r(I),Object.defineProperty(I,"default",{enumerable:!0,value:c}),2&n&&"string"!=typeof c)for(var t in c)e.d(I,t,function(n){return c[n]}.bind(null,t));return I},e.n=function(c){var n=c&&c.__esModule?function(){return c.default}:function(){return c};return e.d(n,"a",n),n},e.o=function(c,n){return Object.prototype.hasOwnProperty.call(c,n)},e.p="",e(e.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/project.js\n//let projects = [];\r\n\r\nconst Project = (name) => {\r\n    let todos = [];\r\n    return { name, todos }\r\n}\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/todo.js\nconst Todo = (name, descrition, due, priority, isDone) => {\r\n    return { name, descrition, due, priority, isDone }\r\n}\r\n\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/controller.js\n\r\n\r\n\r\n//this function to hold the projects objects\r\nlet projectsArray = [];\r\n\r\nconst RenderProject = () => {\r\n\r\n    /**\r\n     * this function adds object of Project\r\n     * @param name is the project name that we pass and we get it from the avlue input from the user\r\n     */\r\n    const addProject = (name) => {\r\n        let newProject = Project(name);\r\n        projectsArray.push(newProject);\r\n    }\r\n\r\n    /**\r\n     * this dunction deletes an entire object at a specific index in the array\r\n     * @param {*} index we pass it through depends on the e.target index\r\n     */\r\n    const deleteProject = (index) => {\r\n        projectsArray.splice(index, 1);\r\n        clearProjectsListUi();\r\n        renderProjects();\r\n    }\r\n\r\n    /**\r\n     * this function renders the array of projects \r\n     */\r\n    const renderProjects = () => {\r\n        projectsArray.forEach(element => {\r\n            let index = projectsArray.indexOf(element);\r\n            const deleteProjIcon = document.createElement('i');\r\n            deleteProjIcon.classList.add('material-icons');\r\n            deleteProjIcon.innerHTML = \"delete\";\r\n            deleteProjIcon.setAttribute('data-delete-index', index);\r\n            const deleteTd = document.createElement('td');\r\n            deleteTd.classList.add('delete-button');\r\n            deleteTd.appendChild(deleteProjIcon);\r\n\r\n\r\n            const projNameTd = document.createElement('td');\r\n            projNameTd.classList.add('project-name');\r\n            projNameTd.innerHTML = projectsArray[index].name;\r\n            projNameTd.setAttribute('data-info-index', index);\r\n\r\n            const bulbProjIcon = document.createElement('i');\r\n            bulbProjIcon.classList.add('material-icons');\r\n            bulbProjIcon.innerHTML = \"lightbulb_outline\";\r\n            const bulbTd = document.createElement('td');\r\n            bulbTd.classList.add('project-icon');\r\n            bulbTd.appendChild(bulbProjIcon);\r\n\r\n            const projItemTr = document.createElement('tr');\r\n            projItemTr.classList.add('project-item');\r\n            projItemTr.appendChild(bulbTd);\r\n            projItemTr.appendChild(projNameTd);\r\n            projItemTr.appendChild(deleteTd);\r\n\r\n            const projectsBody = document.getElementById('projects-body');\r\n            projectsBody.appendChild(projItemTr);\r\n\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * this function adds a todo object inside a specific object's todos array\r\n     * @param {*} project the index of the project inside the projectsArray\r\n     * it's getting projectsArray[i]\r\n     */\r\n    const addTodo = (index) => {\r\n        let todoName = document.getElementById('todo-input-name').value;\r\n        let todoDescription = document.getElementById('todo-input-description').value;\r\n        let todoDue = document.getElementById('todo-date').value;\r\n        let priority = document.getElementById('priority').options[priority.selectedIndex].text;\r\n        let isDone = false;\r\n\r\n\r\n        let newTodo = Todo(todoName, todoDescription, todoDue, priority, isDone);\r\n        projectsArray[index].todos.push(newTodo);\r\n    }\r\n\r\n\r\n    /**\r\n     * this function render the todos on the proect object\r\n     * @param {*} index it gets the index of the object\r\n     * and gets into the array of objects todo and itterate over it\r\n     * it requires an array of todos to itterate on projectsArray[i].todos\r\n     */\r\n    const renderTodo = (index) => {\r\n        let collapse = 0;\r\n        let arrayLength = projectsArray[index].todos.length;\r\n        for (let i = 0; i < arrayLength; i++) {\r\n            //Done Icon and its div creation\r\n            let doneIcon = document.createElement('i');\r\n            doneIcon.classList.add('material-icons');\r\n            doneIcon.innerHTML = \"done_all\";\r\n            let doneIconDiv = document.createElement('div');\r\n            doneIconDiv.classList.add('.col-auto');\r\n            doneIconDiv.setAttribute('id', 'todo-done');\r\n            doneIconDiv.appendChild(doneIcon);\r\n            //Label icon and its div creation\r\n            let labelIcon = document.createElement('i');\r\n            labelIcon.classList.add('material-icons');\r\n            labelIcon.innerHTML = \"label_outline\";\r\n            let labelIconDiv = document.createElement('div');\r\n            labelIconDiv.classList.add('.col-auto');\r\n            labelIconDiv.setAttribute('id', 'todo-label');\r\n            labelIconDiv.appendChild(labelIcon);\r\n            //the div container for done and label icons\r\n            let doneRow = document.createElement('div');\r\n            doneRow.classList.add('row');\r\n            doneRow.setAttribute('id', 'done-row');\r\n            doneRow.appendChild(doneIconDiv);\r\n            doneRow.appendChild(labelIconDiv);\r\n            //\r\n            let todoName = document.createElement('p');\r\n            todoName.innerHTML = projectsArray[index].todos[i].name\r\n            let todoNameLink = document.createElement('a');\r\n            todoNameLink.classList.add('collapsed');\r\n            todoNameLink.classList.add('card-link');\r\n            todoNameLink.setAttribute('data-toggle', 'collapse');\r\n            todoNameLink.setAttribute('href', `collapse${collapse}`);\r\n            todoNameLink.appendChild(todoName);\r\n            //Edit Icon and its div creation\r\n            let editIcon = document.createElement('i');\r\n            editIcon.classList.add('material-icons');\r\n            editIcon.innerHTML = \"edit\";\r\n            let editIconDiv = document.createElement('div');\r\n            editIconDiv.classList.add('.col-auto');\r\n            editIconDiv.setAttribute('id', 'todo-edit');\r\n            editIconDiv.appendChild(editIcon);\r\n            //Delete icon and its div creation\r\n            let deleteIcon = document.createElement('i');\r\n            deleteIcon.classList.add('material-icons');\r\n            deleteIcon.innerHTML = \"delete\";\r\n            let deleteIconDiv = document.createElement('div');\r\n            deleteIconDiv.classList.add('.col-auto');\r\n            deleteIconDiv.setAttribute('id', 'todo-delete');\r\n            deleteIconDiv.appendChild(deleteIcon);\r\n            //the div container for edit and delete icons\r\n            let editRow = document.createElement('div');\r\n            editRow.classList.add('row');\r\n            editRow.setAttribute('id', 'edit-row');\r\n            editRow.appendChild(editIconDiv);\r\n            editRow.appendChild(deleteIconDiv);\r\n            //card header div to contain all above\r\n            let cardHeader = document.createElement('div');\r\n            cardHeader.classList.add('card-header');\r\n            cardHeader.appendChild(doneRow);\r\n            cardHeader.appendChild(todoNameLink);\r\n            cardHeader.appendChild(editRow);\r\n\r\n            //the card body contains the descretion\r\n            let cardBodyText = document.createElement('div');\r\n            cardBodyText.classList.add('card-body');\r\n            cardBodyText.innerHTML = projectsArray[index].todos[i].descrition;\r\n            //div that contains the card body\r\n            let cardBody = document.createElement('div');\r\n            cardBody.classList.add('collapse');\r\n            cardBody.setAttribute('id', `collapse${collapse}`);\r\n            collapse++;\r\n            cardBody.setAttribute('data-parent', '#accordion');\r\n            cardBody.appendChild(cardBodyText);\r\n            //the card div that contains the card header and card body\r\n            let card = document.createElement('div');\r\n            card.classList.add('card');\r\n            card.appendChild(cardHeader);\r\n            card.appendChild(cardBody);\r\n\r\n            //div contains all the cards\r\n            let cardsContainer = document.getElementById('accordion');\r\n            cardsContainer.appendChild(card);\r\n\r\n        };\r\n    }\r\n\r\n    /**\r\n     * this function to render the selected project name\r\n     * @param {*} index the index of the selected project\r\n     */\r\n    const renderSelectedProjectName = (index) => {\r\n        document.getElementById('selected-project-name').innerHTML = projectsArray[index].name;\r\n    }\r\n\r\n\r\n    /**\r\n     * this function to clear the projects list UI\r\n     */\r\n    const clearProjectsListUi = () => {\r\n        document.getElementById('projects-body').innerHTML = \"\";\r\n    }\r\n    /**\r\n     * this function to clear the todos list UI\r\n     */\r\n    const clearTodosListUi = () => {\r\n        document.getElementById('accordion').innerHTML = \"\";\r\n    }\r\n\r\n    console.log(projectsArray);\r\n\r\n\r\n    return {\r\n        addProject,\r\n        deleteProject,\r\n        renderProjects,\r\n        clearProjectsListUi,\r\n        clearTodosListUi,\r\n        addTodo,\r\n        renderTodo,\r\n        renderSelectedProjectName\r\n    }\r\n}\r\n\r\n\r\nconst controller_render = RenderProject();\r\n\r\ncontroller_render.addProject(\"Tutorial\");\r\n\r\nlet tutotialTodo = Todo(\"tutorial1\", \"This is your tutorial that you will follow up with me\", \"20/8/5555\", \"Normal\", false);\r\nlet tutotialTodo1 = Todo(\"tutorial2\", \"This is your tutorial2 that you will follow up with me\", \"20/8/6666\", \"Urgent\", false);\r\nprojectsArray[0].todos.push(tutotialTodo);\r\nprojectsArray[0].todos.push(tutotialTodo1);\r\n\r\n/*\r\nconst addTodo = () => {\r\n    render.renderTodo(0)\r\n}\r\n\r\naddTodo()\r\n*/\r\n\r\nconsole.log(projectsArray[0]);\r\ncontroller_render.renderProjects();\r\ncontroller_render.renderTodo(0)\r\n\r\n\r\n\r\n\r\n\n// CONCATENATED MODULE: ./src/index.js\n\r\n\r\n\r\n\r\n\r\nlet addButton = document.getElementById('add-project-button');\r\n\r\n\r\n\r\n/**\r\n * listen to the event when click on the delte icon on the project\r\n */\r\ndocument.getElementById('projects-body').addEventListener('click', function (e) {\r\n    const render = RenderProject();\r\n    if (e.target && e.target.dataset.deleteIndex != undefined) {\r\n        let index = e.target.dataset.deleteIndex;\r\n        render.deleteProject(index);\r\n    }\r\n})\r\n\r\n\r\n/**\r\n * this function renders the todos inside any project depends on the click target\r\n */\r\ndocument.getElementById('projects-body').addEventListener('click', function (e) {\r\n    const render = RenderProject();\r\n    if (e.target && e.target.dataset.infoIndex != undefined) {\r\n        let index = e.target.dataset.infoIndex;\r\n        render.renderSelectedProjectName(index);\r\n        render.clearTodosListUi();\r\n        render.renderTodo(index);\r\n        console.log(e.target.dataset.infoIndex);\r\n    }\r\n})\r\n\r\n\r\n/**\r\n * this function render the projects from the objects array\r\n * once the user add new project and click add button\r\n */\r\nfunction renderCurrentProjects() {\r\n\r\n    const render = RenderProject();\r\n    render.clearProjectsListUi();\r\n\r\n    let projName = document.getElementById('project-input-name').value;\r\n    //const projOne = Project(projName);\r\n\r\n    render.addProject(projName);\r\n\r\n    render.renderProjects();\r\n\r\n    document.getElementById('project-input-name').value = null;\r\n    console.log(\"hi8\");\r\n\r\n}\r\n\r\n\r\naddButton.addEventListener('click', renderCurrentProjects);\r\n\r\nfunction add() {\r\n\r\n}\r\n\r\n\r\n//document.getElementById('add-todo-button').addEventListener('click', addTodo)\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);